assigned_globs:
  - lib/**/*.rb
  - spec/**/*.rb
  - docs/src/**/*.{jsx,html}
  - readme/**/*.{md,html}
unassigned_globs:
  - spec/spec_holder.rb
  - spec/support/**
  - docs/node_modules/*
  - readme/node_modules/**/*
  - readme/_site/**/*
  - readme/example-docs-site.html
# The `# @feature ...` annotiation at the top of source files is only required for files assigned
# to the following teams.
require_assignment_for_teams:
  - Analysis & Metrics
  - Documentation & Frontend
  - Feature Assignment & Validation
  - Core Library
# Excludes the `.feature_map/definitions` configuration files from the set of files recorded in
# the file assignments for each feature.
ignore_feature_definitions: true
# Enables the identification of teams responsible for each feature based on the CodeOwnership
# team assignments.
skip_code_ownership: false
# Skips validation of the associated assignments file
skip_features_validation: false
# Supports the retrieval of rolled up test coverage statistics from CodeCov.
code_cov:
  service: github
  owner: Example
  repo: example
repository:
  main_branch: 'main'
  url: https://example.com
# Supports link generation in message construction, e.g., release announcements
documentation_site_url: example.github.io/repo
documentation_site:
  health:
    minimum_thresholds:
      good: 95
      fair: 80
      poor: 0
    components:
      cyclomatic_complexity:
        # The relative proportion of total health score that this component adds
        weight: 5
        # A threshold measured against the maximum scoring feature, after which
        # a given feature should receive a perfect score.  For percentile-based
        # health components, this allows features to score well when their
        # specific score may be in a lower percentile (e.g., a score of 9.6 in the set of scores [9.6, 9.7, 9.8, 9.9])
        # but which is still very close to the top score.
        percent_of_max_threshold: 90
      encapsulation:
        weight: 10
        percent_of_max_threshold: 90
      test_coverage:
        weight: 70
        # In absolute scoring components, like test coverage, this number is an
        # absolute threshold after which a feature receives a perfect score.
        percent_of_max_threshold: 95
      todo_count:
        weight: 15
        percent_of_max_threshold: 95
  linked_sites:
    - name: User Service
      url: https://example.github.io/user-service
    - name: Gateway Service
      url: https://example.github.io/gateway-service
  size_percentile:
    minimum_thresholds:
      xl: 95
      l: 75
      m: 25
      s: 5
      xs: 0
  title: Example Site
  test_coverage:
    minimum_thresholds:
      good: 98
      fair: 95
      poor: 0
